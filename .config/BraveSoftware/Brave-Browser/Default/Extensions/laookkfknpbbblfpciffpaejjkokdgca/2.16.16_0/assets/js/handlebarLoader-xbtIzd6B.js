const e=(e,s,t,n)=>{m.addinManager&&m.addinManager.registerAddinFn(e.addin,(function(o,l,i){var c=c||{};c.styles=c.styles||{},c.commands=c.commands||{},c.dependencies=i||c.dependencies||{},c.styles.style=function(){},c.views=c.views||{},c.collect=c.collect||{},c.models=c.models||{},c.templates=c.templates||{},c.info=e,o.console.log(o.elapsed()+": "+c.info.id+" started");const d=Object.keys;for(const e in t){const s=t[e];c.templates[`${e.split("/").at(-1).replace(".hbs","")}`]=Handlebars.template(s)}for(const e of d(s).filter((e=>e.includes("collections"))))s[e](c);for(const e of d(s).filter((e=>e.includes("models"))))s[e](c);for(const e of d(s).filter((e=>e.includes("commands"))))s[e](c);for(const e of d(s).filter((e=>e.includes("views")&&e.includes("first"))))s[e](c);for(const e of d(s).filter((e=>e.includes("views")&&!e.includes("first"))))s[e](c);return n.call(this,c),c}))};export{e as h};