import"./VueBase-W7f1OYgs.js";import{V as t}from"./icon-alert--q0yLTMi.js";import{c as e,a as i}from"./reactiveCustomization-DqGARD3C.js";import{n as s}from"./namesMixin-DfNb5KMg.js";function a(){return new t.observable({loaded:!1,items:{}})}const n={mixins:[s],data:()=>({collection:new a}),unreactive:()=>({type:"",Model:null,dataService:null,names:{}}),computed:{emptyMessage(){return`No ${this.nameLCP} yet`},data(){return this.collection.loaded||this.get(),this.collection},visible(){return e[this.visibleSetting]}},created(){this.dataService||console.warn('No dataService property detected, please connect a dataService property in "unreactive"'),this.$e.$on(this.type+":refresh",this.refresh),this.$e.$on("resetCollections",this.resetCollection)},destroyed(){this.$e.$off(this.type+":refresh",this.refresh),this.$e.$off("resetCollections",this.resetCollection)},methods:{get({queryParams:t,mode:e}={}){return new Promise(((i,s)=>{this.dataService.get({queryParams:t,mode:e,success:t=>{this.addItemsToCollection(t),i()},failure:t=>{console.error(t),s(t)}})}))},refresh({queryParams:t,retry:e,notifyUserOnFailure:i}={}){return this.dataService.refresh({queryParams:t,retry:e,notifyUserOnFailure:i})},addItemsToCollection(t,e=this.collection){const i=e.items,s=t.map((t=>t.id));return Object.keys(i).forEach((t=>{s.includes(t)||this.$delete(i,t)})),t.forEach((t=>{const e=t.id;let s;e in i?s=i[e]:(s=new this.Model,this.$set(i,e,s)),s.updateData(t)})),this.$set(e,"loaded",!0),t},add(t){const e=t.id=m.utils.uuidv4();this.$set(this.collection.items,e,t);const i=this.getAddRequestBody(t);return this.dataService.add(e,i).then((e=>(this.capture&&this.capture(this.fullNameLCS+" add",{context:{item:t}}),e))).catch((t=>{throw this.$delete(this.collection.items,e),t}))},update(t,e){const i=this.getUpdateRequestBody(t,e);return this.dataService.update(t.id,i).then((e=>(this.capture&&this.capture(this.fullNameLCS+" edit",{context:{item:t}}),e)))},delete(t){return this.dataService.delete(t.id).then((e=>(this.capture&&this.capture(this.fullNameLCS+" delete",{context:{item:t}}),this.$delete(this.collection.items,t.id),e)))},archive(t){return this.$set(t,"archived",!0),this.dataService.update(t.id,{archived:!0}).then((e=>(this.capture&&this.capture(this.fullNameLCS+" archive",{context:{item:t}}),e))).catch((e=>{throw this.$set(t,"archived",!1),e}))},unarchive(t){return this.$set(t,"archived",!1),this.dataService.update(t.id,{archived:!1}).then((e=>(this.capture&&this.capture(this.fullNameLCS+" unarchive",{context:{item:t}}),e))).catch((e=>{throw this.$set(t,"archived",!0),e}))},getAddRequestBody(t){const e={};return t.props.forEach((i=>{void 0!==t.editProps[i]&&(e[i]=t.editProps[i])})),e},getUpdateRequestBody(t){const e={};return t.getChanges().forEach((i=>{const s=i.split(".");1===s.length?e[i]=t.editProps[i]:2===s.length&&(e[s[1]]=t.editProps[s[0]][s[1]])})),e},resetCollection(){this.collection=new a}}},r={data:()=>({listPinnedValues:{}}),computed:{pinnedItems(){return this.data.loaded?Object.values(this.data.items).filter((t=>t.pinned&&!t.archived)):[]}},methods:{considerPinnedInList(t){return this.listPinnedValues[t.id]??t.pinned},sortPinned(t,e,i){const s=this.considerPinnedInList(t),a=this.considerPinnedInList(e);return s&&!a?-1:!s&&a?1:(i="function"==typeof i?i(t,e):i)||(t.id>e.id?-1:t.id<e.id?1:0)},togglePinned(t){const e=this.listPinnedValues[t.id];t.id in this.listPinnedValues||(this.listPinnedValues[t.id]=t.pinned),t.pinned=!t.pinned,this.dataService.update(t.id,{pinned:t.pinned}).then((e=>(this.capture&&this.capture(this.fullNameLCS+(t.pinned?" pin":" unpin"),{context:{item:t}}),e))).catch((()=>{t.pinned=!t.pinned,this.listPinnedValues[t.id]=e}))},clearRecentlyChangedItems(){this.listPinnedValues={}}}},o={created(){this.assignRandomItem()},watch:{"randomItem.pinned"(t){t&&this.assignRandomItem()},"randomItem.archived"(t){t&&this.assignRandomItem()},randomItem(){this.randomItem||this.assignRandomItem()},"dashItems.length"(t){t||this.assignRandomItem()},"itemsArray.length"(t,e){!e&&t&&this.assignRandomItem()}},computed:{itemsArray(){return Object.values(this.data.items)},showRandom(){return i["showRandomMetric-"+this.nameCS]},randomItem(){return Object.values(this.data.items).find((t=>t.random))},dashItems(){const t=this.randomItem&&(this.showRandom||!this.pinnedItems.length)?[this.randomItem,...this.pinnedItems]:[...this.pinnedItems];return this.dashSort&&t.sort(this.dashSort),t}},methods:{getRandomItem(t){const e=Object.values(t).filter((t=>!t.pinned&&!t.archived));return e[m.utils.getRandomIntBetween(0,e.length-1)]},assignRandomItem(){const t=this.$watch("data.loaded",(e=>{if(e){this.clearRandomItem();const e=this.getRandomItem(this.data.items);e&&(e.random=!0),this.$nextTick((()=>t()))}}),{immediate:!0})},clearRandomItem(){this.randomItem&&(this.randomItem.random=!1)}}},d={computed:{selectedItem(){return Object.values(this.data.items).find((t=>t.selected))}},methods:{clearSelectedItem(){this.selectedItem&&(this.selectedItem.selected=!1)}}},h={data:()=>({mockCollection:new a}),computed:{data(){return this.mockCollection.loaded?this.mockCollection:(this.collection.loaded||this.get(),this.collection)}},methods:{mockData(t){this.addItemsToCollection(t,this.mockCollection),this.mockCollection.loaded=!0},clearMockData(){this.mockCollection=new a}}},c={data:()=>({id:"",archived:null,selected:!1,editProps:{}}),methods:{updateData(t){this.props.forEach((e=>this[e]=t[e])),t.id&&(this.id=t.id)},revertChanges(){this.editProps={}},getChanges(){const t=(t,e)=>t.getTime()===e.getTime();let e=[];return this.editProps&&this.props.forEach((i=>{if(Array.isArray(this[i])||Array.isArray(this.editProps[i]))m.utils.arraysAreEqual(this[i],this.editProps[i])||e.push(i);else if(this[i]instanceof Date&&this.editProps[i]instanceof Date)t(this[i],this.editProps[i])||e.push(i);else if("object"==typeof this.editProps[i]&&null!==this.editProps[i])for(let s in this.editProps[i]){let a,n=this[i][s],r=this.editProps[i][s];a=n instanceof Date&&r instanceof Date?!t(n,r):n!==r,a&&e.push(`${i}.${s}`)}else this[i]!==this.editProps[i]&&e.push(i)})),e},commitChanges(){this.beforeCommitChanges&&this.beforeCommitChanges(),this.props.forEach((t=>{void 0!==this.editProps[t]&&(this[t]=this.editProps[t])})),this.revertChanges()},copyProperties(){for(let t of this.props)Array.isArray(this[t])?this.$set(this.editProps,t,[...this[t]]):"object"==typeof this[t]&&null!==this[t]?this.$set(this.editProps,t,{...this[t]}):this.$set(this.editProps,t,this[t])}}},l={maxCharPerLine:14,computed:{brokenName(){return m.utils.lineBreakString(m.utils.removeTags(this.name),this.$options.maxCharPerLine)}}};export{a as C,n as b,c as i,l,h as m,r as p,o as r,d as s};