import{F as t}from"./FormToggle-CPdB9uoc.js";import{S as e}from"./SoftFocus-BUhesXB-.js";import{n as s}from"./icon-alert--q0yLTMi.js";const i=s({name:"FormInput",directives:{SoftFocus:e},components:{FormFieldWrapper:t},inject:["formFields"],props:{value:{type:[String,Number],required:!0},name:{type:String,default:"text-input"},autofocus:{type:Boolean,default:!1},type:{type:String,default:"text"},...t.props},emits:["input"],data:()=>({pulse:!1}),created(){var t;null==(t=this.formFields)||t.addField(this.name,this.focus,this.pulseAndFocusInput)},destroyed(){this.formFields.removeField(this.name)},methods:{async focus(){var t;await this.$nextTick(),null==(t=this.$refs.input)||t.focus()},async pulseAndFocusInput(){await this.focus(),this.pulse=!0,await m.utils.delay(1e3),this.pulse=!1},emitOnInput(t){let e=t.target.value;"number"===this.type&&(e=Number(e)),this.$emit("input",e)}}},(function(){var t=this,e=t._self._c;return e("form-field-wrapper",t._b({staticClass:"form-input"},"form-field-wrapper",t.$props,!1),[e("input",{directives:[{name:"soft-focus",rawName:"v-soft-focus",value:t.autofocus,expression:"autofocus"}],ref:"input",staticClass:"hide-controls",class:{pulse:t.pulse},attrs:{type:t.type,"data-test":"form-input"},domProps:{value:t.value},on:{keyup:function(e){if(!e.type.indexOf("key")&&t._k(e.keyCode,"enter",13,e.key,"Enter"))return null;t.formFields&&t.formFields.focusNextInputOrSubmitIfLast(t.name)},input:t.emitOnInput}})])}),[],!1,null,null).exports;export{i as F};