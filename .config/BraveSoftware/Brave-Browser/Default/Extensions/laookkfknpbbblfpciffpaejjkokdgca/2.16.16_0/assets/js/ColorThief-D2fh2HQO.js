if(!t)var t={map:function(t,n){var r={};return n?t.map((function(t,o){return r.index=o,n.call(r,t)})):t.slice()},naturalOrder:function(t,n){return t<n?-1:t>n?1:0},sum:function(t,n){var r={};return t.reduce(n?function(t,o,e){return r.index=e,t+n.call(r,o)}:function(t,n){return t+n},0)},max:function(n,r){return Math.max.apply(null,r?t.map(n,r):n)}};const n=function(){var n=5,r=8-n;function o(t,r,o){return(t<<2*n)+(r<<n)+o}function e(t){var n=[],r=!1;function o(){n.sort(t),r=!0}return{push:function(t){n.push(t),r=!1},peek:function(t){return r||o(),void 0===t&&(t=n.length-1),n[t]},pop:function(){return r||o(),n.pop()},size:function(){return n.length},map:function(t){return n.map(t)},debug:function(){return r||o(),n}}}function u(t,n,r,o,e,u,i){var a=this;a.r1=t,a.r2=n,a.g1=r,a.g2=o,a.b1=e,a.b2=u,a.histo=i}function i(){this.vboxes=new e((function(n,r){return t.naturalOrder(n.vbox.count()*n.vbox.volume(),r.vbox.count()*r.vbox.volume())}))}function a(n,r){if(r.count()){var e=r.r2-r.r1+1,u=r.g2-r.g1+1,i=r.b2-r.b1+1,a=t.max([e,u,i]);if(1==r.count())return[r.copy()];var c,s,f,l,h=0,p=[],g=[];if(a==e)for(c=r.r1;c<=r.r2;c++){for(l=0,s=r.g1;s<=r.g2;s++)for(f=r.b1;f<=r.b2;f++)l+=n[o(c,s,f)]||0;h+=l,p[c]=h}else if(a==u)for(c=r.g1;c<=r.g2;c++){for(l=0,s=r.r1;s<=r.r2;s++)for(f=r.b1;f<=r.b2;f++)l+=n[o(s,c,f)]||0;h+=l,p[c]=h}else for(c=r.b1;c<=r.b2;c++){for(l=0,s=r.r1;s<=r.r2;s++)for(f=r.g1;f<=r.g2;f++)l+=n[o(s,f,c)]||0;h+=l,p[c]=h}return p.forEach((function(t,n){g[n]=h-t})),v(a==e?"r":a==u?"g":"b")}function v(t){var n,o,e,u,i,a=t+"1",s=t+"2",f=0;for(c=r[a];c<=r[s];c++)if(p[c]>h/2){for(e=r.copy(),u=r.copy(),i=(n=c-r[a])<=(o=r[s]-c)?Math.min(r[s]-1,~~(c+o/2)):Math.max(r[a],~~(c-1-n/2));!p[i];)i++;for(f=g[i];!f&&p[i-1];)f=g[--i];return e[s]=i,u[a]=e[s]+1,[e,u]}}}return u.prototype={volume:function(t){var n=this;return n._volume&&!t||(n._volume=(n.r2-n.r1+1)*(n.g2-n.g1+1)*(n.b2-n.b1+1)),n._volume},count:function(t){var n=this,r=n.histo;if(!n._count_set||t){var e,u,i,a=0;for(e=n.r1;e<=n.r2;e++)for(u=n.g1;u<=n.g2;u++)for(i=n.b1;i<=n.b2;i++)a+=r[o(e,u,i)]||0;n._count=a,n._count_set=!0}return n._count},copy:function(){var t=this;return new u(t.r1,t.r2,t.g1,t.g2,t.b1,t.b2,t.histo)},avg:function(t){var r=this,e=r.histo;if(!r._avg||t){var u,i,a,c,s=0,f=1<<8-n,l=0,h=0,p=0;for(i=r.r1;i<=r.r2;i++)for(a=r.g1;a<=r.g2;a++)for(c=r.b1;c<=r.b2;c++)s+=u=e[o(i,a,c)]||0,l+=u*(i+.5)*f,h+=u*(a+.5)*f,p+=u*(c+.5)*f;r._avg=s?[~~(l/s),~~(h/s),~~(p/s)]:[~~(f*(r.r1+r.r2+1)/2),~~(f*(r.g1+r.g2+1)/2),~~(f*(r.b1+r.b2+1)/2)]}return r._avg},contains:function(t){var n=this,o=t[0]>>r;let e=t[1]>>r,u=t[2]>>r;return o>=n.r1&&o<=n.r2&&e>=n.g1&&e<=n.g2&&u>=n.b1&&u<=n.b2}},i.prototype={push:function(t){this.vboxes.push({vbox:t,color:t.avg()})},palette:function(){return this.vboxes.map((function(t){return t.color}))},size:function(){return this.vboxes.size()},map:function(t){for(var n=this.vboxes,r=0;r<n.size();r++)if(n.peek(r).vbox.contains(t))return n.peek(r).color;return this.nearest(t)},nearest:function(t){for(var n,r,o,e=this.vboxes,u=0;u<e.size();u++)((r=Math.sqrt(Math.pow(t[0]-e.peek(u).color[0],2)+Math.pow(t[1]-e.peek(u).color[1],2)+Math.pow(t[2]-e.peek(u).color[2],2)))<n||void 0===n)&&(n=r,o=e.peek(u).color);return o},forcebw:function(){var n=this.vboxes;n.sort((function(n,r){return t.naturalOrder(t.sum(n.color),t.sum(r.color))}));var r=n[0].color;r[0]<5&&r[1]<5&&r[2]<5&&(n[0].color=[0,0,0]);var o=n.length-1,e=n[o].color;e[0]>251&&e[1]>251&&e[2]>251&&(n[o].color=[255,255,255])}},{quantize:function(c,s){if(!c.length||s<2||s>256)return!1;var f=function(t){var e,u,i,a,c=new Array(1<<3*n);return t.forEach((function(t){u=t[0]>>r,i=t[1]>>r,a=t[2]>>r,e=o(u,i,a),c[e]=(c[e]||0)+1})),c}(c);f.forEach((function(){}));var l=function(t,n){var o,e,i,a=1e6,c=0,s=1e6,f=0,l=1e6,h=0;return t.forEach((function(t){o=t[0]>>r,e=t[1]>>r,i=t[2]>>r,o<a?a=o:o>c&&(c=o),e<s?s=e:e>f&&(f=e),i<l?l=i:i>h&&(h=i)})),new u(a,c,s,f,l,h,n)}(c,f),h=new e((function(n,r){return t.naturalOrder(n.count(),r.count())}));function p(t,n){for(var r,o=t.size(),e=0;e<1e3;){if(o>=n)return;if(e++>1e3)return;if((r=t.pop()).count()){var u=a(f,r),i=u[0],c=u[1];if(!i)return;t.push(i),c&&(t.push(c),o++)}else t.push(r),e++}}h.push(l),p(h,.75*s);for(var g=new e((function(n,r){return t.naturalOrder(n.count()*n.volume(),r.count()*r.volume())}));h.size();)g.push(h.pop());p(g,s);for(var v=new i;g.size();)v.push(g.pop());return v}}}().quantize;const r={createPixelArray:function(t,n,r){const o=t,e=[];for(let u,i,a,c,s,f=0;f<n;f+=r)u=4*f,i=o[u+0],a=o[u+1],c=o[u+2],s=o[u+3],(void 0===s||s>=125)&&(i>250&&a>250&&c>250||e.push([i,a,c]));return e},validateOptions:function(t){let{colorCount:n,quality:r}=t;if(void 0!==n&&Number.isInteger(n)){if(1===n)throw new Error("colorCount should be between 2 and 20. To get one color, call getColor() instead of getPalette()");n=Math.max(n,2),n=Math.min(n,20)}else n=10;return(void 0===r||!Number.isInteger(r)||r<1)&&(r=10),{colorCount:n,quality:r}}},o=function(t){this.canvas=document.createElement("canvas"),this.context=this.canvas.getContext("2d"),this.width=this.canvas.width=t.naturalWidth,this.height=this.canvas.height=t.naturalHeight,this.context.drawImage(t,0,0,this.width,this.height)};
/*
* Color Thief v2.4.0
* by Lokesh Dhakar - http://www.lokeshdhakar.com
*
* Thanks
* ------
* Nick Rabinowitz - For creating quantize.js.
* John Schulz - For clean up and optimization. @JFSIII
* Nathan Spady - For adding drag and drop support to the demo page.
*
* License
* -------
* Copyright Lokesh Dhakar
* Released under the MIT license
* https://raw.githubusercontent.com/lokesh/color-thief/master/LICENSE
*
* @license
*/o.prototype.getImageData=function(){return this.context.getImageData(0,0,this.width,this.height)};var e=function(){};e.prototype.getColor=function(t,n=10){return this.getPalette(t,5,n)[0]},e.prototype.getPalette=function(t,e,u){const i=r.validateOptions({colorCount:e,quality:u}),a=new o(t),c=a.getImageData(),s=a.width*a.height,f=r.createPixelArray(c.data,s,i.quality),l=n(f,i.colorCount);return l?l.palette():null},e.prototype.getColorFromUrl=function(t,n,r){const o=document.createElement("img");o.addEventListener("load",(()=>{const e=this.getPalette(o,5,r)[0];n(e,t)})),o.src=t},e.prototype.getImageData=function(t,n){let r=new XMLHttpRequest;r.open("GET",t,!0),r.responseType="arraybuffer",r.onload=function(){if(200==this.status){let t=new Uint8Array(this.response),r=t.length,o=new Array(r);for(r=0;r<t.length;r++)o[r]=String.fromCharCode(t[r]);let e=o.join(""),u=window.btoa(e);n("data:image/png;base64,"+u)}},r.send()},e.prototype.getColorAsync=function(t,n,r){const o=this;this.getImageData(t,(function(t){const e=document.createElement("img");e.addEventListener("load",(function(){const t=o.getPalette(e,5,r)[0];n(t,this)})),e.src=t}))};export{e as default};