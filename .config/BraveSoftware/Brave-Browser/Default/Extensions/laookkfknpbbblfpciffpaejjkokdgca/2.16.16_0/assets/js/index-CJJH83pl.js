const t={};const e={name:"InlineSvg",inheritAttrs:!1,render(t){return this.svgElSource?t("svg",{on:this.$listeners,attrs:Object.assign(this.getSvgAttrs(this.svgElSource),(e=this.$attrs,Object.keys(e).reduce(((t,n)=>(!1!==e[n]&&null!==e[n]&&void 0!==e[n]&&(t[n]=e[n]),t)),{}))),domProps:{innerHTML:this.getSvgContent(this.svgElSource)}}):null;var e},props:{src:{type:String,required:!0},title:{type:String},transformSource:{type:Function,default:t=>t},keepDuringLoading:{type:Boolean,default:!0}},data:()=>({svgElSource:null}),watch:{src(t){this.getSource(t)}},mounted(){this.getSource(this.src)},methods:{getSvgAttrs(t){let e={};const n=t.attributes;if(!n)return e;for(let s=n.length-1;s>=0;s--)e[n[s].name]=n[s].value;return e},getSvgContent(t){return t=t.cloneNode(!0),t=this.transformSource(t),this.title&&function(t,e){const n=t.getElementsByTagName("title");if(n.length)n[0].textContent=e;else{const n=document.createElementNS("http://www.w3.org/2000/svg","title");n.textContent=e,t.insertBefore(n,t.firstChild)}}(t,this.title),t.innerHTML},getSource(e){t[e]||(t[e]=this.download(e)),this.svgElSource&&t[e].getIsPending()&&!this.keepDuringLoading&&(this.svgElSource=null,this.$emit("unloaded")),t[e].then((t=>{this.svgElSource=t,this.$nextTick((()=>{this.$emit("loaded",this.$el)}))})).catch((n=>{this.svgElSource&&(this.svgElSource=null,this.$emit("unloaded")),delete t[e],this.$emit("error",n)}))},download:t=>function(t){if(t.getIsPending)return t;let e=!0,n=t.then((t=>(e=!1,t)),(t=>{throw e=!1,t}));return n.getIsPending=function(){return e},n}(new Promise(((e,n)=>{const s=new XMLHttpRequest;s.open("GET",t,!0),s.onload=()=>{if(s.status>=200&&s.status<400)try{const t=new DOMParser;let r=t.parseFromString(s.responseText,"text/xml").getElementsByTagName("svg")[0];r?e(r):n(new Error('Loaded file is not valid SVG"'))}catch(t){n(t)}else n(new Error("Error loading SVG"))},s.onerror=n,s.send()})))}};const n={install(t){t.component("inline-svg",e)}};export{n as I};