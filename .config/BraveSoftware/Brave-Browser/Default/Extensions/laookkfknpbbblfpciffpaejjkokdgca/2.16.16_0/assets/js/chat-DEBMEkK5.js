import{a2 as e,g as s,d as t,V as n,v as a}from"./icon-alert--q0yLTMi.js";const r=new class{async sendMessage({content:t,parentId:n}){this.cancelTokenSource=e.CancelToken.source();const{data:a}=await s.post("ai/chat",{content:t,parentId:n},{cancelToken:this.cancelTokenSource.token});return this.cancelTokenSource=null,a}async regenerate(t){this.cancelTokenSource=e.CancelToken.source();const{data:n}=await s.post("ai/chat",{parentId:t},{cancelToken:this.cancelTokenSource.token});return this.cancelTokenSource=null,n}cancelRequest(){this.cancelTokenSource&&this.cancelTokenSource.cancel()}},o="Oops! Something went wrong, please check your connection and try again.",c="We are experiencing a high amount of traffic at this time. Please try again later.",i=["filtered_content","validation_error"],l=t("chat",{state:()=>({input:"",chat:[],processing:!1,error:null,lastResponses:[],selectedLastResponseIndex:0}),getters:{canSubmit:e=>!e.processing&&!e.error,chatMessages(e){const s=[...e.chat];return e.error?s.push({role:"assistant",content:e.error.message,error:!0}):e.lastResponses.length&&this.selectedLastResponse&&s.push({...this.selectedLastResponse,showRegenerate:!0,totalResponseCount:e.lastResponses.length,selectedAnswer:e.selectedLastResponseIndex}),s},lastUserMessage:e=>[...e.chat].reverse().find((e=>"user"===e.role)),lastAssistantMessage:e=>[...e.chat].reverse().find((e=>"assistant"===e.role)),selectedLastResponse:e=>e.lastResponses[e.selectedLastResponseIndex]},actions:{async sendMessage(e,{idCallback:s,afterSuccess:t,afterError:n}={}){const a={content:e};this.lastAssistantMessage&&(a.parentId=this.lastAssistantMessage.id);try{this.processing=!0,this.error=null;const{id:e,response:n}=await r.sendMessage(a);e&&s&&s(e),this.lastResponses.push(n);try{null==t||t()}catch(o){console.error(o)}}catch(o){this.handleError(o);try{null==n||n()}catch(c){console.error(c)}}finally{this.processing=!1}},async resubmit(e={}){var s;const t=null==(s=this.lastUserMessage)?void 0:s.content;!this.processing&&t&&await this.sendMessage(t,e)},async submit(e={}){const s=this.input;if(this.processing||!s)return;const t={content:s,role:"user"};this.selectedLastResponse&&(this.chat.push((({id:e,role:s,content:t})=>({id:e,role:s,content:t}))(this.selectedLastResponse)),this.lastResponses=[],this.selectedLastResponseIndex=0),this.chat.push(t),this.input="",await this.sendMessage(s,{...e,idCallback:e=>{n.set(t,"id",e)}})},async regenerate({afterSuccess:e,afterError:s}={}){if(this.processing)return;this.processing=!0,this.error=null;const t=this.selectedLastResponseIndex;this.selectedLastResponseIndex=this.lastResponses.length;const n=this.lastUserMessage&&"id"in this.lastUserMessage?this.lastUserMessage.id:"";if(!n)throw new Error('LastMessage "id" was not found');try{const{response:s}=await r.regenerate(n);this.lastResponses.push(s);try{null==e||e()}catch(a){console.error(a)}}catch(a){this.handleError(a),this.selectedLastResponseIndex=t;try{null==s||s()}catch(o){console.error(o)}}finally{this.processing=!1}},handleError(e){this.error=a(e,{429:c,default:o})},editLastMessage(){var e;this.error=null,this.input=(null==(e=this.lastUserMessage)?void 0:e.content)||"",this.chat.pop()},clear(){r.cancelRequest(),this.error=null,this.chat=[],this.lastResponses=[],this.selectedLastResponseIndex=0,this.input=""}}});export{i as r,l as u};